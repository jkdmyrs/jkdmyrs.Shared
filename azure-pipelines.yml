trigger:
- master

pool:
  vmImage: ubuntu-latest

steps:
- task: UseDotNet@2
  displayName: use dotnet 5.0
  inputs:
    packageType: 'sdk'
    version: '5.0.x'

- task: DotNetCoreCLI@2
  displayName: dotnet restore
  inputs:
    command: 'restore'
    projects: '**/jkdmyrs.Extensions.sln'
    feedsToUse: 'select'

- task: DotNetCoreCLI@2
  displayName: dotnet build
  inputs:
    command: 'build'
    projects: '**/jkdmyrs.Extensions.sln'
    arguments: '-c Release --no-restore'

- task: DotNetCoreCLI@2
  displayName: dotnet test - Unit Tests
  inputs:
    command: 'test'
    projects: '**/jkdmyrs.Extensions.sln'
    arguments: '-c Release --no-build --filter "TestCategory=Unit"'

- task: DotNetCoreCLI@2
  inputs:
    command: 'pack'
    packagesToPack: '**/jkdmyrs.Extensions.Configuration.csproj'
    configuration: 'Release'
    packDirectory: '$(Build.ArtifactStagingDirectory)/out/jkdmyrs.Extensions.Configuration'
    nobuild: true
    versioningScheme: 'off'

- task: DotNetCoreCLI@2
  displayName: dotnet publish (jkdmyrs.Extensions.Configuration.Tests)
  inputs:
    command: 'publish'
    publishWebProjects: false
    projects: '**/jkdmyrs.Extensions.Configuration.Tests.csproj'
    arguments: '-c Release --no-build -o $(Build.ArtifactStagingDirectory)/out/jkdmyrs.Extensions.Configuration.Tests/'

- task: DotNetCoreCLI@2
  displayName: dotnet pack (jkdmyrs.Testing.Common)
  inputs:
    command: 'pack'
    packagesToPack: '**/jkdmyrs.Testing.Common.csproj'
    configuration: 'Release'
    packDirectory: '$(Build.ArtifactStagingDirectory)/out/jkdmyrs.Testing.Common'
    nobuild: true
    versioningScheme: 'off'

- task: PublishBuildArtifacts@1
  displayName: publish drop
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)/out'
    ArtifactName: 'drop'
    publishLocation: 'Container'
